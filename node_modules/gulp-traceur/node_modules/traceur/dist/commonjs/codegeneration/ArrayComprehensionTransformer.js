"use strict";
var $__traceur_47_dist_47_commonjs_47_runtime_47_modules_47_superConstructor_46_js__,
    $__traceur_47_dist_47_commonjs_47_runtime_47_modules_47_createClass_46_js__,
    $__traceur_47_dist_47_commonjs_47_runtime_47_modules_47_getTemplateObject_46_js__,
    $__ComprehensionTransformer_46_js__,
    $__ParseTreeFactory_46_js__,
    $__PlaceholderParser_46_js__;
var $__superConstructor = ($__traceur_47_dist_47_commonjs_47_runtime_47_modules_47_superConstructor_46_js__ = require("traceur/dist/commonjs/runtime/modules/superConstructor.js"), $__traceur_47_dist_47_commonjs_47_runtime_47_modules_47_superConstructor_46_js__ && $__traceur_47_dist_47_commonjs_47_runtime_47_modules_47_superConstructor_46_js__.__esModule && $__traceur_47_dist_47_commonjs_47_runtime_47_modules_47_superConstructor_46_js__ || {default: $__traceur_47_dist_47_commonjs_47_runtime_47_modules_47_superConstructor_46_js__}).default;
var $__createClass = ($__traceur_47_dist_47_commonjs_47_runtime_47_modules_47_createClass_46_js__ = require("traceur/dist/commonjs/runtime/modules/createClass.js"), $__traceur_47_dist_47_commonjs_47_runtime_47_modules_47_createClass_46_js__ && $__traceur_47_dist_47_commonjs_47_runtime_47_modules_47_createClass_46_js__.__esModule && $__traceur_47_dist_47_commonjs_47_runtime_47_modules_47_createClass_46_js__ || {default: $__traceur_47_dist_47_commonjs_47_runtime_47_modules_47_createClass_46_js__}).default;
var $__getTemplateObject = ($__traceur_47_dist_47_commonjs_47_runtime_47_modules_47_getTemplateObject_46_js__ = require("traceur/dist/commonjs/runtime/modules/getTemplateObject.js"), $__traceur_47_dist_47_commonjs_47_runtime_47_modules_47_getTemplateObject_46_js__ && $__traceur_47_dist_47_commonjs_47_runtime_47_modules_47_getTemplateObject_46_js__.__esModule && $__traceur_47_dist_47_commonjs_47_runtime_47_modules_47_getTemplateObject_46_js__ || {default: $__traceur_47_dist_47_commonjs_47_runtime_47_modules_47_getTemplateObject_46_js__}).default;
var ComprehensionTransformer = ($__ComprehensionTransformer_46_js__ = require("./ComprehensionTransformer.js"), $__ComprehensionTransformer_46_js__ && $__ComprehensionTransformer_46_js__.__esModule && $__ComprehensionTransformer_46_js__ || {default: $__ComprehensionTransformer_46_js__}).ComprehensionTransformer;
var createIdentifierExpression = ($__ParseTreeFactory_46_js__ = require("./ParseTreeFactory.js"), $__ParseTreeFactory_46_js__ && $__ParseTreeFactory_46_js__.__esModule && $__ParseTreeFactory_46_js__ || {default: $__ParseTreeFactory_46_js__}).createIdentifierExpression;
var parseStatement = ($__PlaceholderParser_46_js__ = require("./PlaceholderParser.js"), $__PlaceholderParser_46_js__ && $__PlaceholderParser_46_js__.__esModule && $__PlaceholderParser_46_js__ || {default: $__PlaceholderParser_46_js__}).parseStatement;
var ArrayComprehensionTransformer = function($__super) {
  function ArrayComprehensionTransformer() {
    $__superConstructor(ArrayComprehensionTransformer).apply(this, arguments);
  }
  return ($__createClass)(ArrayComprehensionTransformer, {transformArrayComprehension: function(tree) {
      this.pushTempScope();
      var expression = this.transformAny(tree.expression);
      var index = createIdentifierExpression(this.getTempIdentifier());
      var result = createIdentifierExpression(this.getTempIdentifier());
      var tempVarsStatatement = parseStatement($__getTemplateObject(["var ", " = 0, ", " = [];"]), index, result);
      var statement = parseStatement($__getTemplateObject(["", "[", "++] = ", ";"]), result, index, expression);
      var returnStatement = parseStatement($__getTemplateObject(["return ", ";"]), result);
      var functionKind = null;
      result = this.transformComprehension(tree, statement, functionKind, tempVarsStatatement, returnStatement);
      this.popTempScope();
      return result;
    }}, {}, $__super);
}(ComprehensionTransformer);
Object.defineProperties(module.exports, {
  ArrayComprehensionTransformer: {
    get: function() {
      return ArrayComprehensionTransformer;
    },
    enumerable: true
  },
  __esModule: {value: true}
});
