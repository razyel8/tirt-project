"use strict";
var $__traceur_47_dist_47_commonjs_47_runtime_47_modules_47_superConstructor_46_js__,
    $__traceur_47_dist_47_commonjs_47_runtime_47_modules_47_createClass_46_js__,
    $__FindVisitor_46_js__;
var $__superConstructor = ($__traceur_47_dist_47_commonjs_47_runtime_47_modules_47_superConstructor_46_js__ = require("traceur/dist/commonjs/runtime/modules/superConstructor.js"), $__traceur_47_dist_47_commonjs_47_runtime_47_modules_47_superConstructor_46_js__ && $__traceur_47_dist_47_commonjs_47_runtime_47_modules_47_superConstructor_46_js__.__esModule && $__traceur_47_dist_47_commonjs_47_runtime_47_modules_47_superConstructor_46_js__ || {default: $__traceur_47_dist_47_commonjs_47_runtime_47_modules_47_superConstructor_46_js__}).default;
var $__createClass = ($__traceur_47_dist_47_commonjs_47_runtime_47_modules_47_createClass_46_js__ = require("traceur/dist/commonjs/runtime/modules/createClass.js"), $__traceur_47_dist_47_commonjs_47_runtime_47_modules_47_createClass_46_js__ && $__traceur_47_dist_47_commonjs_47_runtime_47_modules_47_createClass_46_js__.__esModule && $__traceur_47_dist_47_commonjs_47_runtime_47_modules_47_createClass_46_js__ || {default: $__traceur_47_dist_47_commonjs_47_runtime_47_modules_47_createClass_46_js__}).default;
var FindVisitor = ($__FindVisitor_46_js__ = require("./FindVisitor.js"), $__FindVisitor_46_js__ && $__FindVisitor_46_js__.__esModule && $__FindVisitor_46_js__ || {default: $__FindVisitor_46_js__}).FindVisitor;
var FindInFunctionScope = function($__super) {
  function FindInFunctionScope() {
    $__superConstructor(FindInFunctionScope).apply(this, arguments);
  }
  return ($__createClass)(FindInFunctionScope, {
    visitFunctionDeclaration: function(tree) {
      this.visitList(tree.annotations);
    },
    visitFunctionExpression: function(tree) {
      this.visitList(tree.annotations);
    },
    visitSetAccessor: function(tree) {
      this.visitAny(tree.name);
      this.visitList(tree.annotations);
    },
    visitGetAccessor: function(tree) {
      this.visitAny(tree.name);
      this.visitList(tree.annotations);
    },
    visitMethod: function(tree) {
      this.visitAny(tree.name);
      this.visitList(tree.annotations);
    }
  }, {}, $__super);
}(FindVisitor);
Object.defineProperties(module.exports, {
  FindInFunctionScope: {
    get: function() {
      return FindInFunctionScope;
    },
    enumerable: true
  },
  __esModule: {value: true}
});
