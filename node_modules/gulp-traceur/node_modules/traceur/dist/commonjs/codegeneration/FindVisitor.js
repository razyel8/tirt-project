"use strict";
var $__traceur_47_dist_47_commonjs_47_runtime_47_modules_47_createClass_46_js__,
    $__traceur_47_dist_47_commonjs_47_runtime_47_modules_47_superConstructor_46_js__,
    $___46__46__47_syntax_47_ParseTreeVisitor_46_js__;
var $__createClass = ($__traceur_47_dist_47_commonjs_47_runtime_47_modules_47_createClass_46_js__ = require("traceur/dist/commonjs/runtime/modules/createClass.js"), $__traceur_47_dist_47_commonjs_47_runtime_47_modules_47_createClass_46_js__ && $__traceur_47_dist_47_commonjs_47_runtime_47_modules_47_createClass_46_js__.__esModule && $__traceur_47_dist_47_commonjs_47_runtime_47_modules_47_createClass_46_js__ || {default: $__traceur_47_dist_47_commonjs_47_runtime_47_modules_47_createClass_46_js__}).default;
var $__superConstructor = ($__traceur_47_dist_47_commonjs_47_runtime_47_modules_47_superConstructor_46_js__ = require("traceur/dist/commonjs/runtime/modules/superConstructor.js"), $__traceur_47_dist_47_commonjs_47_runtime_47_modules_47_superConstructor_46_js__ && $__traceur_47_dist_47_commonjs_47_runtime_47_modules_47_superConstructor_46_js__.__esModule && $__traceur_47_dist_47_commonjs_47_runtime_47_modules_47_superConstructor_46_js__ || {default: $__traceur_47_dist_47_commonjs_47_runtime_47_modules_47_superConstructor_46_js__}).default;
var ParseTreeVisitor = ($___46__46__47_syntax_47_ParseTreeVisitor_46_js__ = require("../syntax/ParseTreeVisitor.js"), $___46__46__47_syntax_47_ParseTreeVisitor_46_js__ && $___46__46__47_syntax_47_ParseTreeVisitor_46_js__.__esModule && $___46__46__47_syntax_47_ParseTreeVisitor_46_js__ || {default: $___46__46__47_syntax_47_ParseTreeVisitor_46_js__}).ParseTreeVisitor;
var FindVisitor = function($__super) {
  function FindVisitor() {
    var keepOnGoing = arguments[0];
    $__superConstructor(FindVisitor).call(this);
    this.found_ = false;
    this.shouldContinue_ = true;
    this.keepOnGoing_ = keepOnGoing;
  }
  return ($__createClass)(FindVisitor, {
    get found() {
      return this.found_;
    },
    set found(v) {
      if (v) {
        this.found_ = true;
        if (!this.keepOnGoing_)
          this.shouldContinue_ = false;
      }
    },
    visitAny: function(tree) {
      this.shouldContinue_ && tree && tree.visit(this);
    },
    visitList: function(list) {
      if (list) {
        for (var i = 0; this.shouldContinue_ && i < list.length; i++) {
          this.visitAny(list[i]);
        }
      }
    }
  }, {}, $__super);
}(ParseTreeVisitor);
Object.defineProperties(module.exports, {
  FindVisitor: {
    get: function() {
      return FindVisitor;
    },
    enumerable: true
  },
  __esModule: {value: true}
});
